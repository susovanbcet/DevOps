#  ..................................................................................
#
#  docker image build -f ./Dockerfile.SSH -t nigamrout/ubuntu-ssh .
#  docker push nigamrout/ubuntu-ssh
#
#  docker network create ansinet
#  docker container run -it -d --name client1 --net ansinet nigamrout/ubuntu-ssh bash
#  docker container run -it -d --name client2 --net ansinet nigamrout/ubuntu-ssh bash
#  docker container run -it -d --name client3 --net ansinet nigamrout/ubuntu-ssh bash
#  docker container run -it -d --name client4 --net ansinet nigamrout/ubuntu-ssh bash
#
#  ..................................................................................

# DockerFile

FROM ubuntu as nigamssh

MAINTAINER Nigam Rout <nigam.anand@gmail.com>
LABEL maintainer="nigam.anand@gmail.com"

# Upgrade Ubuntu
RUN apt-get update -y



# Install pre-requisites for OPEN SSH Server
RUN apt-get install --no-install-recommends -y software-properties-common

# Install OPEN SSH Server
RUN apt-get install openssh-server openssh-client -y
RUN apt-get install vim -y
RUN apt-get update -y



# Create the directory /var/run/sshd with Permission 0755
RUN mkdir /var/run/sshd
RUN chmod 0755 /var/run/sshd



# Create new user 'devops' with its home directory
RUN useradd -m devops

# Set appropriate recursive permission to User Home directory
RUN chmod -R 0700 /home/devops

# Set the 'devops' user Password to 'devops123'
RUN echo 'devops:devops123' | chpasswd



# Check Current User
RUN whoami

# switch user to 'devops'
USER devops

# Check Current User
RUN whoami



# Generate RSA a key with out any password
RUN ssh-keygen -t rsa -f /home/devops/.ssh/id_rsa -P ""

# Creating 'authorized_keys' file
RUN touch /home/devops/.ssh/authorized_keys

# Printing the content of 'id_rsa.pub' file
RUN cat /home/devops/.ssh/id_rsa.pub



# switch user to 'root'
USER root
RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

ENV NOTVISIBLE "in users profile"
RUN echo "export VISIBLE=now" >> /etc/profile

#### RUN chmod -R 0711 /etc/ssh

# Create a symolic link for 'python' to python 3.5
RUN ln -sf /usr/bin/python3.5 /usr/bin/python

# Exposing port 22
EXPOSE 22

# Run the SSH service
CMD ["/usr/sbin/sshd", "-D"]
