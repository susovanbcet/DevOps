#  ..................................................................................
#
#  docker image build -f ./Dockerfile.SetUp.SSHD -t nigamrout/ubuntu-sshd .
#  docker push nigamrout/ubuntu-sshd
#
#  docker network create ansinet
#  docker container run -it -d --name client1 --net ansinet nigamrout/ubuntu-sshd bash
#
#  ..................................................................................

# DockerFile

FROM ubuntu as nigamsshd

MAINTAINER Nigam Rout <https://hub.docker.com/r/nigamrout>
LABEL maintainer="https://hub.docker.com/r/nigamrout/"

# Upgrade Ubuntu
RUN apt-get update -y

# Install pre-requisites for OPEN SSH Server
RUN apt-get install --no-install-recommends -y software-properties-common

# Install OPEN SSH Server
RUN apt-get install openssh-server openssh-client -y
RUN apt-get install vim -y
RUN apt-get update -y



# Create the directory /var/run/sshd with permission 0755
RUN mkdir /var/run/sshd
RUN chmod 0755 /var/run/sshd



# Create new user 'devops' with home directory with recursive permission 0700
RUN useradd -m devops
#RUN chmod -R 0700 /home/devops

# Set the 'devops' user Password to 'devops123'
RUN echo 'devops:devops123' | chpasswd



USER devops

# Generate RSA a key with out any password
RUN ssh-keygen -t rsa -f /home/devops/.ssh/id_rsa -P ""

# Creating 'authorized_keys' file
RUN touch /home/devops/.ssh/authorized_keys
RUN chmod -R 0700 /home/devops

# Printing the content of 'id_rsa.pub' file
RUN cat /home/devops/.ssh/id_rsa.pub




USER root
RUN echo 'root:root' | chpasswd
RUN sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config

##RUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
## SSH login fix. Otherwise user is kicked off after login
##RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd
##ENV NOTVISIBLE "in users profile"
##RUN echo "export VISIBLE=now" >> /etc/profile
#### RUN chmod -R 0711 /etc/ssh

# Create a symolic link for 'python' to python 3.5
RUN ln -sf /usr/bin/python3.5 /usr/bin/python

# Exposing port 22
EXPOSE 22

# Run the SSH service
CMD ["/usr/sbin/sshd", "-D"]
