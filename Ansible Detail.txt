
* 01. ansible --list-hosts all
[nigam@localhost Nigam_Ansible]$ ansible --list-hosts all
 [WARNING]: provided hosts list is empty, only localhost is available. Note
that the implicit localhost does not match 'all'

  hosts (0):
[nigam@localhost Nigam_Ansible]$ 



* 02. ansible -i <host-file-name> --list-hosts all
	ansible -i dev --list-hosts all

[nigam@localhost Nigam_Ansible]$ ansible -i dev --list-hosts all
  hosts (5):
    control
    db01
    app01
    app02
    lb01
[nigam@localhost Nigam_Ansible]$ 
[nigam@localhost Nigam_Ansible]$ 


* 03 [nigam@localhost Nigam_Ansible]$ ansible -i dev --list-hosts "*"
  hosts (5):
    control
    db01
    app01
    app02
    lb01
[nigam@localhost Nigam_Ansible]$ 


* 05 [nigam@localhost Nigam_Ansible]$ ansible --list-hosts loadbalancer
  hosts (1):
    lb01
[nigam@localhost Nigam_Ansible]$ 
[nigam@localhost Nigam_Ansible]$ ansible --list-hosts webserver
  hosts (2):
    app01
    app02
[nigam@localhost Nigam_Ansible]$ 
[nigam@localhost Nigam_Ansible]$ ansible --list-hosts database
  hosts (1):
    db01
[nigam@localhost Nigam_Ansible]$ 
[nigam@localhost Nigam_Ansible]$ 

* 06. [nigam@localhost Nigam_Ansible]$ ansible --list-hosts database,loadbalancer
  hosts (2):
    db01
    lb01
[nigam@localhost Nigam_Ansible]$ 
[nigam@localhost Nigam_Ansible]$ ansible --list-hosts webserver,database
  hosts (3):
    app01
    app02
    db01
[nigam@localhost Nigam_Ansible]$ 

* 07. [nigam@localhost Nigam_Ansible]$ ansible --list-hosts webserver[0]
  hosts (1):
    app01
[nigam@localhost Nigam_Ansible]$ 
[nigam@localhost Nigam_Ansible]$ ansible --list-hosts \!loadbalancer
  hosts (4):
    db01
    control
    app01
    app02
[nigam@localhost Nigam_Ansible]$ 
[nigam@localhost Nigam_Ansible]$




[nigam@localhost Nigam_Ansible]$ ansible -m ping all
control | SUCCESS => {
    "changed": false, 
    "ping": "pong"
}
db01 | UNREACHABLE! => {
    "changed": false, 
    "msg": "Failed to connect to the host via ssh: ssh: connect to host db01 port 22: Connection timed out\r\n", 
    "unreachable": true
}
app02 | UNREACHABLE! => {
    "changed": false, 
    "msg": "Failed to connect to the host via ssh: ssh: connect to host app02 port 22: Connection timed out\r\n", 
    "unreachable": true
}
lb01 | UNREACHABLE! => {
    "changed": false, 
    "msg": "Failed to connect to the host via ssh: ssh: connect to host lb01 port 22: Connection timed out\r\n", 
    "unreachable": true
}
app01 | UNREACHABLE! => {
    "changed": false, 
    "msg": "Failed to connect to the host via ssh: ssh: connect to host app01 port 22: Connection timed out\r\n", 
    "unreachable": true
}
[nigam@localhost Nigam_Ansible]$ 
[nigam@localhost Nigam_Ansible]$ 

======================
LAB:


# Latest Ubuntu LTS
FROM ubuntu:14.04
MAINTAINER Toshio Kuratomi <tkuratomi@ansible.com>
RUN apt-get update && \
    apt-get install --no-install-recommends -y software-properties-common && \
    apt-add-repository ppa:ansible/ansible && \
    apt-get update && \
    apt-get install -y ansible

RUN echo '[local]\nlocalhost\n' > /etc/ansible/hosts


* Creating and Image with Ansible on Ubuntu Container
  ---------------------------------------------------
	docker container run -it --name controlserver --net ansinet ubuntu bash

	docker container run -it ubuntu bash
	apt-get update 
	apt-get install --no-install-recommends -y software-properties-common 
	apt-add-repository ppa:ansible/ansible 
	apt-get update 
	apt-get install -y ansible

	docker commit <container-id> nigamrout/ansible:ubuntu1604
	docker login
	docker push nigamrout/ansible:ubuntu1604



* Create Networ "ansinet"
	docker network create ansinet

* Create multiple container in "ansinet" network with Ubintu image
	docker container run -it -d --name controlserver --net ansinet nigamrout/ansible:ubuntu1604 bash
	docker container run -it -d --name loadbalancer --net ansinet ubuntu bash
	docker container run -it -d --name webserver01 --net ansinet ubuntu bash
	docker container run -it -d --name webserver02 --net ansinet ubuntu bash
	docker container run -it -d --name dbserver01 --net ansinet ubuntu bash
	docker container run -it -d --name dbserver02 --net ansinet ubuntu bash

	docker container run -it -d --name testserver1 --net ansinet -p 22 ubuntu bash
	docker exec -it testserver1 bash

	docker container run -it -d --name testserver2 --net ansinet -p 22 ubuntu bash
	docker exec -it testserver2 bash

	=> Docker Cointainer All host IP Addres
	docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)

	=> Docker Cointainer All host Name
	docker inspect -f '{{.Name}} - {{.NetworkSettings.IPAddress }}' $(docker ps -aq)

	=> Docker Cointainer All host Name and IP Addres
	docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)
	docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq)
	
	=> docker container run -d -it --name sshserver --net ansinet -p 22 ubuntussh




* Adding host name to ansible Host file
	echo 'controlserver' >> /etc/ansible/hosts
	echo 'loadbalancer' >> /etc/ansible/hosts
	echo 'webserver01' >> /etc/ansible/hosts
	echo 'webserver02' >> /etc/ansible/hosts
	echo 'dbserver01' >> /etc/ansible/hosts
	echo 'dbserver02' >> /etc/ansible/hosts

* Stoppoing list of container
	docker container stop controlserver
	docker container stop loadbalancer
	docker container stop webserver01
	docker container stop webserver02
	docker container stop dbserver01
	docker container stop dbserver02
	or
	docker container stop $(docker ps -aq)

* Removing list of container
	docker container rm -f controlserver
	docker container rm -f loadbalancer
	docker container rm -f webserver01
	docker container rm -f webserver02
	docker container rm -f dbserver01
	docker container rm -f dbserver02
	or 
	docker container rm $(docker ps -aq)

	docker exec 02cd4b13da26 cat /etc/hosts

* Remove Docker all Network "ansinet"
	docker network rm $(docker network ls -q)


* To Current Open Port 
	netstat -tulpn
* Install open SSH-Server 
	sudo apt-get install openssh-server 




SSH SetUp
==========
apt-get update
apt-get install openssh-server -y
eval "$(ssh-agent -s)"
ssh-keygen -t rsa -b 4096 -C nigam@nsg.com
ll /root/.ssh/

ssh-add -k ~/.ssh/id_rsa
apt-get install xclip -y

============================================================ ...
root@e6c757593a82:/# apt-get update
Get:1 http://security.ubuntu.com/ubuntu xenial-security InRelease [107 kB]
Get:2 http://archive.ubuntu.com/ubuntu xenial InRelease [247 kB]
Get:3 http://security.ubuntu.com/ubuntu xenial-security/universe Sources [79.5 kB]
Get:4 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [109 kB]       
Get:5 http://archive.ubuntu.com/ubuntu xenial-backports InRelease [107 kB]     
Get:6 http://security.ubuntu.com/ubuntu xenial-security/main amd64 Packages [612 kB]
Get:7 http://archive.ubuntu.com/ubuntu xenial/universe Sources [9802 kB]       
Get:8 http://security.ubuntu.com/ubuntu xenial-security/restricted amd64 Packages [12.7 kB]
Get:9 http://security.ubuntu.com/ubuntu xenial-security/universe amd64 Packages [435 kB]
Get:10 http://security.ubuntu.com/ubuntu xenial-security/multiverse amd64 Packages [3489 B]
Get:11 http://archive.ubuntu.com/ubuntu xenial/main amd64 Packages [1558 kB]   
Get:12 http://archive.ubuntu.com/ubuntu xenial/restricted amd64 Packages [14.1 kB]
Get:13 http://archive.ubuntu.com/ubuntu xenial/universe amd64 Packages [9827 kB]
Get:14 http://archive.ubuntu.com/ubuntu xenial/multiverse amd64 Packages [176 kB]
Get:15 http://archive.ubuntu.com/ubuntu xenial-updates/universe Sources [254 kB]
Get:16 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 Packages [990 kB]
Get:17 http://archive.ubuntu.com/ubuntu xenial-updates/restricted amd64 Packages [13.1 kB]
Get:18 http://archive.ubuntu.com/ubuntu xenial-updates/universe amd64 Packages [803 kB]
Get:19 http://archive.ubuntu.com/ubuntu xenial-updates/multiverse amd64 Packages [18.5 kB]
Get:20 http://archive.ubuntu.com/ubuntu xenial-backports/main amd64 Packages [5157 B]
Get:21 http://archive.ubuntu.com/ubuntu xenial-backports/universe amd64 Packages [8075 B]
Fetched 25.2 MB in 3s (6625 kB/s)                           
Reading package lists... Done


[nigam@localhost ~]$ docker exec -it 487843d940c1 bash
root@487843d940c1:/# 
root@487843d940c1:/# apt-get install openssh-server -y
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following additional packages will be installed:
  libwrap0 ncurses-term openssh-sftp-server python3-chardet python3-pkg-resources python3-requests python3-six python3-urllib3 ssh-import-id tcpd wget
Suggested packages:
  ssh-askpass rssh molly-guard ufw monkeysphere python3-setuptools python3-ndg-httpsclient python3-openssl python3-pyasn1
The following NEW packages will be installed:
  libwrap0 ncurses-term openssh-server openssh-sftp-server python3-chardet python3-pkg-resources python3-requests python3-six python3-urllib3 ssh-import-id tcpd wget
0 upgraded, 12 newly installed, 0 to remove and 5 not upgraded.
Need to get 1300 kB of archives.
After this operation, 7779 kB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://archive.ubuntu.com/ubuntu xenial/main amd64 libwrap0 amd64 7.6.q-25 [46.2 kB]
Get:2 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 wget amd64 1.17.1-1ubuntu1.3 [299 kB]
Get:3 http://archive.ubuntu.com/ubuntu xenial/main amd64 ncurses-term all 6.0+20160213-1ubuntu1 [249 kB]
Get:4 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 openssh-sftp-server amd64 1:7.2p2-4ubuntu2.4 [38.7 kB]
Get:5 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 openssh-server amd64 1:7.2p2-4ubuntu2.4 [335 kB]
Get:6 http://archive.ubuntu.com/ubuntu xenial/main amd64 python3-pkg-resources all 20.7.0-1 [79.0 kB]
Get:7 http://archive.ubuntu.com/ubuntu xenial/main amd64 python3-chardet all 2.3.0-2 [96.2 kB]
Get:8 http://archive.ubuntu.com/ubuntu xenial/main amd64 python3-six all 1.10.0-3 [11.0 kB]
Get:9 http://archive.ubuntu.com/ubuntu xenial-updates/main amd64 python3-urllib3 all 1.13.1-2ubuntu0.16.04.1 [57.3 kB]
Get:10 http://archive.ubuntu.com/ubuntu xenial/main amd64 python3-requests all 2.9.1-3 [55.4 kB]
Get:11 http://archive.ubuntu.com/ubuntu xenial/main amd64 tcpd amd64 7.6.q-25 [23.0 kB]
Get:12 http://archive.ubuntu.com/ubuntu xenial/main amd64 ssh-import-id all 5.5-0ubuntu1 [10.2 kB]
Fetched 1300 kB in 0s (1519 kB/s)        
debconf: delaying package configuration, since apt-utils is not installed
Selecting previously unselected package libwrap0:amd64.
(Reading database ... 11685 files and directories currently installed.)
Preparing to unpack .../libwrap0_7.6.q-25_amd64.deb ...
Unpacking libwrap0:amd64 (7.6.q-25) ...
Selecting previously unselected package wget.
Preparing to unpack .../wget_1.17.1-1ubuntu1.3_amd64.deb ...
Unpacking wget (1.17.1-1ubuntu1.3) ...
Selecting previously unselected package ncurses-term.
Preparing to unpack .../ncurses-term_6.0+20160213-1ubuntu1_all.deb ...
Unpacking ncurses-term (6.0+20160213-1ubuntu1) ...
Selecting previously unselected package openssh-sftp-server.
Preparing to unpack .../openssh-sftp-server_1%3a7.2p2-4ubuntu2.4_amd64.deb ...
Unpacking openssh-sftp-server (1:7.2p2-4ubuntu2.4) ...
Selecting previously unselected package openssh-server.
Preparing to unpack .../openssh-server_1%3a7.2p2-4ubuntu2.4_amd64.deb ...
Unpacking openssh-server (1:7.2p2-4ubuntu2.4) ...
Selecting previously unselected package python3-pkg-resources.
Preparing to unpack .../python3-pkg-resources_20.7.0-1_all.deb ...
Unpacking python3-pkg-resources (20.7.0-1) ...
Selecting previously unselected package python3-chardet.
Preparing to unpack .../python3-chardet_2.3.0-2_all.deb ...
Unpacking python3-chardet (2.3.0-2) ...
Selecting previously unselected package python3-six.
Preparing to unpack .../python3-six_1.10.0-3_all.deb ...
Unpacking python3-six (1.10.0-3) ...
Selecting previously unselected package python3-urllib3.
Preparing to unpack .../python3-urllib3_1.13.1-2ubuntu0.16.04.1_all.deb ...
Unpacking python3-urllib3 (1.13.1-2ubuntu0.16.04.1) ...
Selecting previously unselected package python3-requests.
Preparing to unpack .../python3-requests_2.9.1-3_all.deb ...
Unpacking python3-requests (2.9.1-3) ...
Selecting previously unselected package tcpd.
Preparing to unpack .../tcpd_7.6.q-25_amd64.deb ...
Unpacking tcpd (7.6.q-25) ...
Selecting previously unselected package ssh-import-id.
Preparing to unpack .../ssh-import-id_5.5-0ubuntu1_all.deb ...
Unpacking ssh-import-id (5.5-0ubuntu1) ...
Processing triggers for systemd (229-4ubuntu21.2) ...
Setting up libwrap0:amd64 (7.6.q-25) ...
Setting up wget (1.17.1-1ubuntu1.3) ...
Setting up ncurses-term (6.0+20160213-1ubuntu1) ...
Setting up openssh-sftp-server (1:7.2p2-4ubuntu2.4) ...
Setting up openssh-server (1:7.2p2-4ubuntu2.4) ...
debconf: unable to initialize frontend: Dialog
debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (Can't locate Term/ReadLine.pm in @INC (you may need to install the Term::ReadLine module) (@INC contains: /etc/perl /usr/local/lib/x86_64-linux-gnu/perl/5.22.1 /usr/local/share/perl/5.22.1 /usr/lib/x86_64-linux-gnu/perl5/5.22 /usr/share/perl5 /usr/lib/x86_64-linux-gnu/perl/5.22 /usr/share/perl/5.22 /usr/local/lib/site_perl /usr/lib/x86_64-linux-gnu/perl-base .) at /usr/share/perl5/Debconf/FrontEnd/Readline.pm line 7.)
debconf: falling back to frontend: Teletype
Creating SSH2 RSA key; this may take some time ...
2048 SHA256:ycV9IdO6ZnV/PoTqknorNvKALD3UMmwiAwckhQRZuo8 root@487843d940c1 (RSA)
Creating SSH2 DSA key; this may take some time ...
1024 SHA256:WifQWgF/WD76aZ286SMDvJba2djA5C6MoflYdlGJAHY root@487843d940c1 (DSA)
Creating SSH2 ECDSA key; this may take some time ...
256 SHA256:t9+MURTgCXDHy9QRqJKgUrA45N1iP0tFxZM6Xos3Fvw root@487843d940c1 (ECDSA)
Creating SSH2 ED25519 key; this may take some time ...
256 SHA256:bww5mOJ8BbvJg7xpDZixL0pCm8mR0cR9cJzQDXUWTBI root@487843d940c1 (ED25519)
invoke-rc.d: could not determine current runlevel
invoke-rc.d: policy-rc.d denied execution of start.
Setting up python3-pkg-resources (20.7.0-1) ...
Setting up python3-chardet (2.3.0-2) ...
Setting up python3-six (1.10.0-3) ...
Setting up python3-urllib3 (1.13.1-2ubuntu0.16.04.1) ...
Setting up python3-requests (2.9.1-3) ...
Setting up tcpd (7.6.q-25) ...
Setting up ssh-import-id (5.5-0ubuntu1) ...
Processing triggers for libc-bin (2.23-0ubuntu10) ...
Processing triggers for systemd (229-4ubuntu21.2) ...
root@487843d940c1:/# 
root@487843d940c1:/# 


root@487843d940c1:/etc/ssh# 
root@487843d940c1:/etc/ssh# ssh-keygen -t rsa -b 4096
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:E8ObctJHHQpjAJjXle51LUu2sFFrUUJNdSYp1nZ6XuQ root@487843d940c1
The key's randomart image is:
+---[RSA 4096]----+
|   o.o.o=. .+=+o+|
|  o . .o.o o=o=o+|
|   .   .+ oo.* = |
|       ..*+ B o E|
|      o.S..O + o.|
|       +.o. o   .|
|                 |
|                 |
|                 |
+----[SHA256]-----+
root@487843d940c1:/etc/ssh# 

root@487843d940c1:/etc/ssh# cd /root/.ssh/
root@487843d940c1:~/.ssh# ll
total 12
drwx------. 2 root root   57 Apr 29 05:34 ./
drwx------. 1 root root   39 Apr 27 05:41 ../
-rw-------. 1 root root 3326 Apr 29 05:34 id_rsa
-rw-r--r--. 1 root root  743 Apr 29 05:34 id_rsa.pub
-rw-r--r--. 1 root root  222 Apr 27 05:10 known_hosts
root@487843d940c1:~/.ssh# 
root@487843d940c1:~/.ssh# scp id_rsa.pub root@172.21.0.3

=========================================================== ...


